@echo off
setlocal enabledelayedexpansion
chcp 65001 >nul
color 0A

echo ===============================================
echo         UPLOAD FILES TO GITHUB TOOL
echo ===============================================
echo.

:: Ki·ªÉm tra xem Git ƒë√£ ƒë∆∞·ª£c c√†i ƒë·∫∑t hay ch∆∞a
git --version >nul 2>&1
if errorlevel 1 (
    echo [ERROR] Git ch∆∞a ƒë∆∞·ª£c c√†i ƒë·∫∑t tr√™n m√°y c·ªßa b·∫°n!
    echo Vui l√≤ng t·∫£i v√† c√†i ƒë·∫∑t Git t·ª´: https://git-scm.com/
    pause
    exit /b 1
)

echo [INFO] ƒêang ki·ªÉm tra Git... ‚úì
echo.

:: Nh·∫≠p th√¥ng tin t·ª´ ng∆∞·ªùi d√πng
set /p repo_url="Nh·∫≠p ƒë∆∞·ªùng link GitHub repository (VD: https://github.com/username/repo.git): "
if "%repo_url%"=="" (
    echo [ERROR] B·∫°n ph·∫£i nh·∫≠p ƒë∆∞·ªùng link repository!
    pause
    exit /b 1
)

set /p commit_message="Nh·∫≠p commit message (ƒë·ªÉ tr·ªëng s·∫Ω d√πng 'Initial commit'): "
if "%commit_message%"=="" set commit_message=Initial commit

echo.
echo ===============================================
echo Repository: %repo_url%
echo Commit message: %commit_message%
echo Th∆∞ m·ª•c hi·ªán t·∫°i: %CD%
echo ===============================================
echo.

set /p confirm="B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën upload t·∫•t c·∫£ file trong th∆∞ m·ª•c n√†y? (y/N): "
if /i not "%confirm%"=="y" (
    echo ƒê√£ h·ªßy thao t√°c.
    pause
    exit /b 0
)

echo.
echo [INFO] B·∫Øt ƒë·∫ßu qu√° tr√¨nh upload...
echo.

:: Kh·ªüi t·∫°o Git repository n·∫øu ch∆∞a c√≥
if not exist ".git" (
    echo [STEP 1] Kh·ªüi t·∫°o Git repository...
    git init
    if errorlevel 1 (
        echo [ERROR] Kh√¥ng th·ªÉ kh·ªüi t·∫°o Git repository!
        pause
        exit /b 1
    )
    echo [SUCCESS] ƒê√£ kh·ªüi t·∫°o Git repository ‚úì
) else (
    echo [STEP 1] Git repository ƒë√£ t·ªìn t·∫°i ‚úì
)

:: Th√™m t·∫•t c·∫£ file v√†o staging area
echo [STEP 2] Th√™m t·∫•t c·∫£ file v√†o Git...
git add .
if errorlevel 1 (
    echo [ERROR] Kh√¥ng th·ªÉ th√™m file v√†o Git!
    pause
    exit /b 1
)
echo [SUCCESS] ƒê√£ th√™m t·∫•t c·∫£ file ‚úì

:: Ki·ªÉm tra xem c√≥ file n√†o ƒë·ªÉ commit kh√¥ng
echo [STEP 3] Ki·ªÉm tra c√°c thay ƒë·ªïi...
git diff --cached --quiet
if errorlevel 1 (
    echo [INFO] C√≥ file m·ªõi ƒë·ªÉ commit
    git commit -m "%commit_message%"
    if errorlevel 1 (
        echo [ERROR] Kh√¥ng th·ªÉ commit c√°c thay ƒë·ªïi!
        pause
        exit /b 1
    )
    echo [SUCCESS] ƒê√£ commit th√†nh c√¥ng ‚úì
) else (
    echo [INFO] Kh√¥ng c√≥ thay ƒë·ªïi m·ªõi ƒë·ªÉ commit
    git log --oneline -1 >nul 2>&1
    if errorlevel 1 (
        echo [ERROR] Repository tr·ªëng v√† kh√¥ng c√≥ file n√†o ƒë·ªÉ commit!
        echo Vui l√≤ng th√™m √≠t nh·∫•t m·ªôt file v√†o th∆∞ m·ª•c n√†y.
        pause
        exit /b 1
    )
    echo [INFO] S·ª≠ d·ª•ng commit hi·ªán c√≥ ‚úì
)

:: Ki·ªÉm tra v√† th√™m remote origin
git remote | findstr origin >nul
if errorlevel 1 (
    echo [STEP 4] Th√™m remote repository...
    git remote add origin "%repo_url%"
    if errorlevel 1 (
        echo [ERROR] Kh√¥ng th·ªÉ th√™m remote repository!
        pause
        exit /b 1
    )
    echo [SUCCESS] ƒê√£ th√™m remote repository ‚úì
) else (
    echo [STEP 4] C·∫≠p nh·∫≠t remote repository...
    git remote set-url origin "%repo_url%"
    echo [SUCCESS] ƒê√£ c·∫≠p nh·∫≠t remote repository ‚úì
)

:: Ki·ªÉm tra v√† thi·∫øt l·∫≠p branch main
echo [STEP 5] Thi·∫øt l·∫≠p branch main...
git log --oneline -1 >nul 2>&1
if errorlevel 1 (
    echo [INFO] Repository ch∆∞a c√≥ commit, t·∫°o branch main sau khi commit...
) else (
    for /f "tokens=*" %%i in ('git branch --show-current 2^>nul') do set current_branch=%%i
    if "!current_branch!"=="master" (
        echo [INFO] ƒê·ªïi t√™n branch t·ª´ master sang main...
        git branch -M main
        if errorlevel 1 (
            echo [ERROR] Kh√¥ng th·ªÉ ƒë·ªïi t√™n branch!
            pause
            exit /b 1
        )
    ) else if "!current_branch!"=="" (
        echo [INFO] T·∫°o v√† chuy·ªÉn sang branch main...
        git checkout -b main
        if errorlevel 1 (
            echo [ERROR] Kh√¥ng th·ªÉ t·∫°o branch main!
            pause
            exit /b 1
        )
    ) else (
        echo [INFO] ƒêang ·ªü branch: !current_branch!
        if not "!current_branch!"=="main" (
            echo [INFO] Chuy·ªÉn sang branch main...
            git checkout -b main 2>nul || git checkout main
        )
    )
)
echo [SUCCESS] Branch main ƒë√£ s·∫µn s√†ng ‚úì

:: Ki·ªÉm tra k·∫øt n·ªëi v·ªõi GitHub
echo [STEP 6] Ki·ªÉm tra k·∫øt n·ªëi v·ªõi GitHub...
git ls-remote origin >nul 2>&1
if errorlevel 1 (
    echo [ERROR] Kh√¥ng th·ªÉ k·∫øt n·ªëi v·ªõi GitHub repository!
    echo.
    echo Vui l√≤ng ki·ªÉm tra:
    echo - ƒê∆∞·ªùng link repository c√≥ ƒë√∫ng kh√¥ng: %repo_url%
    echo - Repository c√≥ t·ªìn t·∫°i v√† b·∫°n c√≥ quy·ªÅn truy c·∫≠p kh√¥ng
    echo - ƒê√£ thi·∫øt l·∫≠p authentication ch∆∞a (Personal Access Token ho·∫∑c SSH)
    echo.
    echo ƒê·ªÉ thi·∫øt l·∫≠p Personal Access Token:
    echo 1. V√†o GitHub Settings ^> Developer settings ^> Personal access tokens
    echo 2. T·∫°o token m·ªõi v·ªõi quy·ªÅn 'repo'
    echo 3. S·ª≠ d·ª•ng token l√†m m·∫≠t kh·∫©u khi Git y√™u c·∫ßu
    echo.
    echo Th√¥ng tin Git hi·ªán t·∫°i:
    echo User: %USERNAME%
    git config user.name 2>nul || echo [WARNING] Ch∆∞a thi·∫øt l·∫≠p user.name
    git config user.email 2>nul || echo [WARNING] Ch∆∞a thi·∫øt l·∫≠p user.email
    pause
    exit /b 1
)
echo [SUCCESS] K·∫øt n·ªëi GitHub th√†nh c√¥ng ‚úì

:: Push l√™n GitHub
echo [STEP 7] ƒêang upload l√™n GitHub...
git push -u origin main
if errorlevel 1 (
    echo [ERROR] Kh√¥ng th·ªÉ push l√™n GitHub!
    echo.
    echo L·ªói c√≥ th·ªÉ do:
    echo - Authentication th·∫•t b·∫°i (c·∫ßn Personal Access Token)
    echo - Repository kh√¥ng c√≥ quy·ªÅn write
    echo - Conflict v·ªõi remote repository
    echo.
    echo Th·ª≠ ch·∫°y l·ªánh sau ƒë·ªÉ xem chi ti·∫øt l·ªói:
    echo git push -u origin main
    pause
    exit /b 1
)

echo.
echo ===============================================
echo [SUCCESS] UPLOAD TH√ÄNH C√îNG! üéâ
echo.
echo T·∫•t c·∫£ file ƒë√£ ƒë∆∞·ª£c upload l√™n:
echo %repo_url%
echo.
echo B·∫°n c√≥ th·ªÉ truy c·∫≠p repository ƒë·ªÉ xem k·∫øt qu·∫£.
echo ===============================================
echo.

pause 